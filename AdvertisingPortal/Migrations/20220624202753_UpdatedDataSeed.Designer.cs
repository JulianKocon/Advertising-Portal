// <auto-generated />
using System;
using AdvertisingPortal.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdvertisingPortal.Migrations
{
    [DbContext(typeof(PortalDbContext))]
    [Migration("20220624202753_UpdatedDataSeed")]
    partial class UpdatedDataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdvertisementCategory", b =>
                {
                    b.Property<int>("AdvertisementsIdAdvertisement")
                        .HasColumnType("int");

                    b.Property<int>("CategoriesIdCategory")
                        .HasColumnType("int");

                    b.HasKey("AdvertisementsIdAdvertisement", "CategoriesIdCategory");

                    b.HasIndex("CategoriesIdCategory");

                    b.ToTable("AdvertisementCategory");
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.PurchaseOrder", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("IdAdvertisement")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUser", "IdAdvertisement");

                    b.HasIndex("IdAdvertisement");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.Region", b =>
                {
                    b.Property<int>("IdRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegion"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRegion");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            IdRegion = 1,
                            Name = "Warsaw, Poland"
                        },
                        new
                        {
                            IdRegion = 2,
                            Name = "Gdynia, Poland"
                        },
                        new
                        {
                            IdRegion = 3,
                            Name = "New York, USA"
                        },
                        new
                        {
                            IdRegion = 4,
                            Name = "Dallas, USA"
                        });
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Advertisement", b =>
                {
                    b.Property<int>("IdAdvertisement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdvertisement"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRegion")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("money");

                    b.HasKey("IdAdvertisement");

                    b.HasIndex("IdRegion");

                    b.HasIndex("IdUser");

                    b.ToTable("Advertisements");

                    b.HasData(
                        new
                        {
                            IdAdvertisement = 1,
                            Date = new DateTime(2022, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Old but gold",
                            IdRegion = 1,
                            IdUser = 1,
                            IsAvailable = true,
                            Name = "Toyota mr2",
                            Price = 24000m
                        },
                        new
                        {
                            IdAdvertisement = 2,
                            Date = new DateTime(2022, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "White Maine Coon for sale",
                            IdRegion = 1,
                            IdUser = 1,
                            IsAvailable = true,
                            Name = "Pets",
                            Price = 1000m
                        });
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            IdCategory = 1,
                            Name = "Vehicles"
                        },
                        new
                        {
                            IdCategory = 2,
                            Name = "Real estate"
                        },
                        new
                        {
                            IdCategory = 3,
                            Name = "House and garden"
                        },
                        new
                        {
                            IdCategory = 4,
                            Name = "Pets"
                        });
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdRegion")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varbinary(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varbinary(2000)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionIdRegion")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("RegionIdRegion");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdvertisementCategory", b =>
                {
                    b.HasOne("AdvertisingPortal.Entities.Advertisement", null)
                        .WithMany()
                        .HasForeignKey("AdvertisementsIdAdvertisement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertisingPortal.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesIdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.PurchaseOrder", b =>
                {
                    b.HasOne("AdvertisingPortal.Entities.Advertisement", "Advertisement")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdAdvertisement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertisingPortal.Entities.User", "User")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Advertisement", b =>
                {
                    b.HasOne("AdvertisingPortal.DataAccess.Region", "Region")
                        .WithMany("Advertisements")
                        .HasForeignKey("IdRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertisingPortal.Entities.User", "User")
                        .WithMany("Advertisements")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.User", b =>
                {
                    b.HasOne("AdvertisingPortal.DataAccess.Region", null)
                        .WithMany("Users")
                        .HasForeignKey("RegionIdRegion");
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.Region", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Advertisement", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.User", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
