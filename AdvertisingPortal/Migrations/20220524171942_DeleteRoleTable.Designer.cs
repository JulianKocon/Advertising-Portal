// <auto-generated />
using System;
using AdvertisingPortal.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdvertisingPortal.Migrations
{
    [DbContext(typeof(PortalDbContext))]
    [Migration("20220524171942_DeleteRoleTable")]
    partial class DeleteRoleTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdvertisementCategory", b =>
                {
                    b.Property<int>("AdvertisementsIdAdvertisement")
                        .HasColumnType("int");

                    b.Property<int>("CategoriesIdCategory")
                        .HasColumnType("int");

                    b.HasKey("AdvertisementsIdAdvertisement", "CategoriesIdCategory");

                    b.HasIndex("CategoriesIdCategory");

                    b.ToTable("AdvertisementCategory");
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.PurchaseOrder", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("IdAdvertisement")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUser", "IdAdvertisement");

                    b.HasIndex("IdAdvertisement");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.Region", b =>
                {
                    b.Property<int>("IdRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRegion");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Advertisement", b =>
                {
                    b.Property<int>("IdAdvertisement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRegion")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("money");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionIdRegion")
                        .HasColumnType("int");

                    b.HasKey("IdAdvertisement");

                    b.HasIndex("IdUser");

                    b.HasIndex("RegionIdRegion");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdRegion")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varbinary(2000)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varbinary(2000)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionIdRegion")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("RegionIdRegion");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdvertisementCategory", b =>
                {
                    b.HasOne("AdvertisingPortal.Entities.Advertisement", null)
                        .WithMany()
                        .HasForeignKey("AdvertisementsIdAdvertisement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertisingPortal.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesIdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.PurchaseOrder", b =>
                {
                    b.HasOne("AdvertisingPortal.Entities.Advertisement", "Advertisement")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdAdvertisement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertisingPortal.Entities.User", "User")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Advertisement", b =>
                {
                    b.HasOne("AdvertisingPortal.Entities.User", "User")
                        .WithMany("Advertisements")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdvertisingPortal.DataAccess.Region", null)
                        .WithMany("Advertisements")
                        .HasForeignKey("RegionIdRegion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.User", b =>
                {
                    b.HasOne("AdvertisingPortal.DataAccess.Region", null)
                        .WithMany("Users")
                        .HasForeignKey("RegionIdRegion");
                });

            modelBuilder.Entity("AdvertisingPortal.DataAccess.Region", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.Advertisement", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("AdvertisingPortal.Entities.User", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
